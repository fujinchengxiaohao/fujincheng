目录操作命令：
	1.mkdir 创建目录
	2.cd（change directory）切换目录
		语法格式：cd   要切换的目录
	目录路径：
		1）绝对目录
		2）相对目录
当前所在目录是/home/Admin
切换到/home/Admin/test目录
	：1）使用绝对路径：cd   /home/Admin/test
	    2）使用相对路径：cd  test
特殊的目录：~   表示当前用户的主目录
	    .     表示当前所在目录
	    ..    表示当前所在目录的上一层目录
	    -     表示回退到上一次的工作目录
cd   和cd~ 都是切换到当前用户的主目录
 cd    ~用户名
cd     ~user  （切换到user用户的主目录）

删除目录：rmdir
		功能：删除空目录
		语法：rmdir       【选项】【删除目录的名称】：rmdir  test
rm  -r   目录（可以删除空目录，也可以删除非空目录）rm：remove
rmdir   dir（删除空目录）
rm -r dir  （不管dir是否为空，都可以删除）


ls列出文件和文件属性
	-l 列出文件属性
	-a显示所有文件和目录
	-A显示所有文件和目录，但不显示当前目录‘’.‘’和上层目录‘’..‘’
	-i显示文件的inode编号
		：ls列出当前目录下的所有文件，但不包含隐藏文件
		ls -file列表查看file（文本）是否存在
		ls dir
		ls -l file如果file存在，则会列出file的属性
	[Admin@locahost ~]$ ls -l file
		-rw-r--r--.  1  Admin admin 0 3月  18  11:32  file
		1) -   文件类型，file是文本
		2）rw-r--r--  文件权限（拥有者  同组其他用户  其他用户）
		3）1：文件的硬链接数

		4）Admin:文件拥有者

		5）admin:文件的所属组

		6）0：文件的大小（单位：字节）

		7）3月  18 11:32：文件的修改时间

		8）file:文件名

	第一个字符文件类型中：
	
	d：目录文件

	-: 表示普通文件	l：链接文件	b：块设备文件	c：字符设备文件	p：管道文件
	
	（5）ls -a  目录（不加目录，默认就是查看当前目录）
	（6）ls -A  目录（不加目录，默认就是查看当前目录）
	（7）ls -i  目录或者文件




文件：创建、复制、移动、删除、查看
	

touch创建一个空文件；如果文件存在，则会修改文件的最后的访问时间
	touch +文件名的路径

	touch：创建文本文件
	mkdir：创建目录
	目录下创建文件：touch test/file1
	如果创建的文件已经存在，再次创建该文件时则会修改访问时间。不会重新创建新文件
		例：在当前目录创建一个文本文件file2：touch file2


cp复制：复制文件或者目录
	cp [选项] [源文件或者目录] [目标文件或目录]
	常用选项：
		1.-f：强制复制文件或文件，不论目标文件或目录是否存在
		2.-i：覆盖前询问（使-n选项失效）
		3.-n：不覆盖已存在的文件（使-i选项失效）
		4.-u：只在源文件文件比目标新或目标文件不存在时才进行复制
		5.-r：递归复制目录及其子目录内的所有文件（或者-R）
		6.-p：保留原文件的所有者、组、权限
	注意：-f、-i、-n同时存在时，仅最后一个有效

例：
	将当前目录下的文件file1复制到当前文件下的test目录中：cp file1 test
						      cp -f file1 test
						      cp -i file1 test（目标文件存在时会询问）
						      cp -n file1 test（目标文件存在不会被覆盖）
						      cp -
cp 文件   目录    ：直接复制
cp 文件   文件    ：复制过去会重命名  cp file1 file3  将file1复制到当前目录并命名为file3
复制目录时必须加-r：cp -r test test3：将目录test复制到test3
cp -p ~minbgyyueye/file1 ~  当前用户为root,把mingyyueye下的文件file1复制到root的主目录

mv移动或更名现有的文件或目录
	mv两个功能：

	1）移动文件  	语法：mv 源文件  目录

	2）重命名文件  	语法：mv 源文件  文件
	
	例如：
	   1)将当前目录下的file1重命为file2
		mv file1 file2
	   2)将当前目录下的file1移动到当前目录下的test目录中，并重命名为file2
		mv file1 test/file2



rm删除、file

cat查看列表


创建链接文件:ln(link)
	ln [选项] 源文件或目录 目标文件或目录
	
	硬链接   取别名 （没有选项）
	软连接   快捷方式   -s

		-f   强行覆盖任何已存在的，目标文件
		-i   询问是否覆盖链接文件
		-s  创建软连接文件（符号链接）

	创建软连接
		可以为文件或者目录创建符号链接
	l：软连接文件
		通过符号链接可以查看、修改、执行源文件，但符号链接文件不等于源文件

	-i：查看编号

		删除一个符号链接不会影响到这个符号链接指向的源文件或目录；但删除、移动、重命名某个
	符号链接所指向的源文件或目录不会导致这个符号链接被删除，只会让这个符号链接断裂或无效


	创建硬链接文件（不能给目录创建硬链接）
		ln 源文件 目标文件

		源文件和硬链接文件对应的是同一个文件，通过任意一个
		如果一个文件有多个硬链接，



切换用户
	：su 或者 su root   切换到管理员
	：su mingyyueye   切换到mingyyueye


who 显示登录信息




文本编辑器
	vi和vim最常用、最基本
	vi只能执行文本输入删除、查找、替换等工作，不能对字体、段落进行排版
	
	调用vi编辑器     vi filename 即vi 文本文件名字
			如果文件存在，则打开此文件并显示文件内容
			如果不存在，则创建一个文本


		touch：创建文件
		vi      ：文件不存在则存盘时创建文件，最重要的功能是编辑文件





vi编辑器的工作模式
		1.）命令模式：打开编辑器，默认的工作模式就是命令模式，什么都不是做，或按esc进入命令模式
				可以控制屏幕光标的移动，字符、字或行的删除、复制、粘贴等

		2.）编辑模式：按下“i；I；o；O；a；A”进入编辑模式，可进行文字的添加、修改等操作

		3.）命令行模式：输入：，就可以进行文本的保存、查找、替换等操作


vi常用命令：
	1.）命令模式下的操作：1）命令模式下的命令


   了解：

   	hjkl  左下上右

  	Ctrl+f	屏幕向下翻动一页
   	Ctrl+b	屏幕向上翻动一页
   	Ctrl+d	屏幕向下翻动半页
  	Ctrl+u	屏幕向上翻动半页

    掌握：

	H	光标移动到当前屏幕  最上方那一行
	M	光标移动到当前屏幕  中间的那一行
	L	光标移动到当前屏幕  最下方那一行
	G	光标移动到文件的    最后一行
	nG	移动到    第n行
	n<enter>	光标从当前位置处  向下移动n行 

	^或0	将光标快速跳转到本行的  行首字符 
	$	将光标快速跳转到本行的  行尾字符 

	w	将光标快速跳转到当前光标所在位置的后一个单词的首字母 (了解)
	b	将光标快速跳转到当前光标所在位置的前一个单词的首字母 (了解)
	e	将光标快速跳转到当前光标所在位置的后一个单词的尾字母 (了解) 
     

	n<space>	按下数字后再按空格键，光标会在当前行向右移动	n个字符
	u	取消最近一次的操作，可以多次使用u命令恢复已进行的多步操作 
	U	取消对当前行进行的所有操作 
	Ctrl + r	对使用u命令撤销的操作进行恢复 


	nx,nX	nx为向后删除n个字符，nX为向前删除n个字符
	x,X	x为向后删除一个字符，X为向前删除一个字符
	dd	删除光标所在的那一整行
	ndd	删除光标所在行的向下n行
	d1G	删除光标所在行到第一行的所有数据
	dG	删除光标所在行到最后一行的所有数据
	yw	复制当前光标到单词尾字符的内容到vi缓冲区 
	y$	复制当前光标到行尾的内容到vi缓冲区 
	y^	复制当前光标到行首的内容到vi缓冲区
	yy	复制光标所在行
	nyy	复制光标所在行的向下n行，例如20yy，向下复制20行
	y1G	复制光标所在行到第一行的所有数据
	yG	复制光标所在行到最后一行的所有数据
	p,P	p为复制的数据粘贴在光标下一行，P为粘贴在光标的上一行
	J	将光标所在行与下一行的数据结合成一行

例如：

      复制光标所在行到第3行的内容   y3G

  光标移动到最后一行			 G

  粘贴到最后一行				p


光标移动到第10行  10G

删除光标所在行到第3行的内容   d3G


复制从光标所在行到最后1行的内容  yG

光标移动到第1行				  1G

粘贴到第1行					  P(大写)

	2.）编辑模式下的操作：
		i ：在光标所在处插入字符
		I：在行首插入字符
		a：在光标的下一个位置插入字符
		A：在行末插入字符
		o：在下方插入一行
		O：在上方插入一行
		r：替换光标所指的字符
		R：连续替换光标所指的字符，按Esc键结束

	3.）命令行模式下的操作：
		编辑模式：
			i：在当前光标处插入字符
			I：在行首插入字符
			a：在当前光标的下一个字符添加字符
			A：光标移动到行尾
			o：在光标下方插入一行
			O：在光标上方插入一行
			r：替换光标所指的那一个字符、
			R：一直替换光标所指的字符，直到按esc结束
			ESC：退出编辑模式，进入命令模式

		命令行模式：
			w   将编辑的数据保存到硬盘文件中
			w！若文件属性为只读，强制写入改文件
			q    退出vi，若文件被改动，则提示无法退出
			q！ 强制退出（不保存）
			wq  保存文件并退出（可写文件）
			wq！强制保存文件并退出（只读文件）
			w 文件名：将数据保存到另一个文件中
			r 文件名： 可以把文件内容读取过来放到光标所在行后面

	
	set nu设置行号和set no nu取消行号
	复制：n1，n2 co n3将n1，n2行之间的所有内容复制到n3中
	移动：n1，n2 m n3将n1，n2行之间的所有内容移动到n3中
	删除：n1，n2 d  删除n1，n2之间的内容
	替换：s/old/new将当前行查找到的第一个old替换为new
		s/old/new/g将当前行中所有的old替换为new
		n1，n2 s/old/new/g在行号n1，n2之间所有old替换为new
		%s/old/new/g将整个文件内old替换为new
	查找：/word从上到下查找word
		？word从下到上查找word
		n定位到下一个匹配的字符


1.基本用户信息：/etc/shadow
只有管理员才能进行用户的管理
2.用户的密码文件：/etc/shadow
	密码是hash密码。密码的处理是单向的，
3.用户分类：管理员，系统用户，自定义用户
	管理员：root用户。UID位0，拥有所有系统权限
	系统用户：安装过程中自动创建的，不能登录到系统，UID在1——999之间
	自定义用户：管理员创建并赋予权限，UID在1000——60000之间，只能管理自己启动的进程，其他普通用户只能在自己的主目录下进行写操作

	主目录默认位于“/home/用户名”下
	用户默认配置信息从/etc/login.defs中读取

	用户基本信息文件：etc/passwd
	用户密码等安全信息文件：/etc/shadow，只要root用户才可以操作此文件





添加用户：useradd [选项] <用户名>
	常用选项：
		-u<uid>	账户的用户ID
		-d<目录>指定用户的主目录
		-c<备注>加上备注文字
		-g<群组>账户主组的名称或ID
		-G<群组>账户的附加组列表
		-e<有效期限>账户的过期日期
		-s<shell>登录所使用的shell
		-m/-M建立（-m）或不创建（-M）用户的主目录
		-r创建一个系统账户

	1）.添加一个user2用户，ID为1010，主属组id为1030，主目录为/home/user2_test,登录时的shell为/bin/nologin,备注信息为：New user
---groupadd -g 1030 test
---useradd  -u 1010 -g 1030 -d /home/user2_test -s /bin/nologin -c "New user" user2
	2).添加一个user3用户，不创建主目录，账户过期时间为2020年04月14日
useradd -M -e 2020/04/14 user3



usermod 修改用户信息
	usermod [选项] 用户名
	-c:改变用户的描述信息
	-d:改变用户的主目录，如果加上-m则会将旧主目录移动到新的目录中去（-m加在新目录之后）
	-g<群组>账户主组的名称或ID
	-G<群组>账户的附加组列表
	-e<有效期限>账户的过期日期
	-l:改变用户的登录用名
	-s:改变用户的默认shell
	-u:改变用户的UID
	-L:锁住密码，是密码不可用
	-U为用户密码解锁

	3）.修改user2的用户信息，修改登录时所用的shell为/bin/bash,修改其主目录为/home/user2（将以前主目录中的文件移动到新的主目录），并且将用户名改为user_2
	usermod -s /bin/bash -d /home/user2 -m -l user_2 user2

	锁定user_2的密码：usermod -L user_2
	解锁user_2的密码：usermod -U user_2




passwd修改用户密码信息
	passwd [选项] <用户名>
	常用选项：
		-k:保持身份验证令牌不过期
		-d:删除已命名账号的密码
		-l:锁定指定账户的密码
		-u:解锁指定账户的密码
		-e:终止指定账户的密码（不能跟时间，不能和-x/-n/-w/-i等选项合用）
		-f:强制执行操作
		-x:密码需要修改的天数（默认99999）
		-n:密码不能修改的天数（默认0）
		-w:在密码过期前多少天开始提醒用户（默认7）
		-i:当密码过期后经过多少天该用户会被禁用
		-S:报告已命名账号的密码状态
	

		1）.修改user1用户的信息，修改密码最大有效天数为88888，修改密码不能更改天数为2天，修改提示天数为5天，账号禁用天数为3
			passwd -x 88888 -n 2 -w 5 -i 3 user1

		修改user1的密码：passwd user1
		删除user1的密码：passwd -d user1




userdel删除用户
		userdel [选项] <用户名>
	-r删除用户主目录以及目录中的所有文件
		删除一个用户必须：
			1：删除/etc/passwd和/etc/shadow文件和用户相关的记录
			2.删除/etc/group和/etc/gshadow文件和用户相关的记录
			3.删除用户的主目录
			4.删除属于此用户的文件
		删除user2及其主目录：userdel -r user2





用户组：对用户进行管理及控制访问权限的一种手段；一个组可以有多个用户，一个用户也能属于不同的组。当一个用户同时属于多个组时，/etc/passwd文件中记录的是用户所属的主属组，也就是登录时所属的默认组，其他组为附属组，用户要访问属于附属组的文件时，要用newgrp命令是自己成为所访问的组的成员。用户组的管理涉及：用户的添加、删除和修改。与用户组相关的信息都存放在/etc/group和/etc/gshadow文件中

用户组管理
	1.groupadd 添加用户组：groupadd [选项] <组名>
		-g 组id  用来给用户指定GID,必须唯一，且为整数（1000-60000）
		-p 密码  修改组的密码
例：添加group2，组id为1010，组密码为123456,：groupadd -g 1010 -p "123456"


	2.groupdel 删除用户组:groupdel [选项] <组名>
		groupdel group

	如果某个用户组是其他用户的主属组，这个组不能直接删除

	3.groupmod 修改用户组信息：groupmod [选项]<组名>
		常用选项：
			-g：组id
			-n：更改组名
			-o：允许使用重复的组id
			-p：将密码改为（加密过的）
		修改group1的信息：GID为1001，允许组id重复，密码：654321，组名：group ：
	groupmod -g 1001 -o -p654321 -n group group1


	4.gpasswd 设置群组密码：gpasswd [选项]<组名>
		常用选项：
			-a 向组添加用户
			-d 从组中删除用户
			-r 移除组的密码
			-M 设置成员
			-A 设置管理员
			user1，user2，user3从组中删除：
			gpasswd -d user1 group
			gpasswd -d user2 group
			gpasswd -d user3 group



	groups 查看用户组属组：group Admin 列出Admin用户的所有属组，group只列出当前用户的所属组。
	newgroup 切换用户组：newgroup 组名 将当前用户切换为指定组名





磁盘管理和文件系统
磁盘从添加到使用经过的步骤：
  添加磁盘、磁盘分区、分区格式化、挂载分区、在挂载点读写磁盘
1.磁盘管理
（1）添加磁盘  
设备文件:放到/dev目录下  （device）
设备分类：
1）本地设备：通过设备文件来访问
		分：字符设备  块设备 
2）网络设备：通过IP+端口的方式
磁盘设备文件：
	不能通过设备文件来访问磁盘
	磁盘设备文件的命名方式：
	1）hd:IDE磁盘
	2）sd:SCSI、SATA磁盘	
	/dev/sda2
	sd:表示该磁盘是SCSI或SATA磁盘	
	a:表示是第1块SCSI或SATA磁盘
	2：表示是磁盘的第2个分区
（2）磁盘分区
1）磁盘分区的类型：3种
	1个磁盘容量=主分区的容量+扩展分区的内容
	分区的个数：主分区+扩展分区最多4个（最多一个扩展分区）

	扩展分区：不能直接使用,必须划分成逻辑分区使用
		扩展分区的总容量=所有逻辑分区的容量之和
		逻辑分区可以有n个
	
2）磁盘分区命令：
命令：fdisk 
语法：
	fdisk [选项] <磁盘>    更改分区表
 	fdisk [选项] -l <磁盘>   列出分区表
 	fdisk -s <分区>        给出分区大小(块数)
   例如：
1）对新添加的第2块磁盘/dev/sdb进行分区，分成2个主分区，1个扩展分区，3个逻辑分区
	fdisk  /dev/sdb
	m:打印帮助信息
	a:添加分区
	d:删除分区
	p:打印分区表
	w:保存分区表并退出
	q:直接退出不保存
2）查看第2块磁盘/dev/sdb的分区情况
	fdisk  -l  /dev/sdb
3）查看第2块磁盘/dev/sdb的第1分区的大小
	fdisk -s /dev/sdb1
（3）磁盘、分区格式化
1）格式化的原理：就是为分区或者整个磁盘创建文件系统
2）格式化的命令
  语法：mkfs  -t  文件系统的类型  分区/磁盘
3）文件系统的功能：管理和存储文件
4）文件系统的分类
 ext系列（ext/ext2/ext3/ext4/ext5）,swap,vfat,NFS，SMB,iso9660
5）分区/磁盘的格式化
	例如：
	1）对/dev/sdb磁盘的第一个分区进行格式化，格式化所使用的文件系统为ext4
      格式化命令：mkfs  -t  ext4  /dev/sdb1
      查看分区的格式化结果：lsblk  -f  
（4）挂载磁盘
挂载的条件：
分区或者磁盘已经格式化
创建一个目录作为挂载点
1）手动挂载
	语法：mount [选项] 分区或磁盘 挂载点
      选项：
		-t  文件系统
		-o  挂载选项    （指定挂载的方式）
      例如：
1）把/dev/sdb1挂载到/mnt/sdb_1目录
	创建挂载目录：mkdir   /mnt/sdb_1 
	挂载：mount  /dev/sdb1   /mnt/sdb_1  
   查看挂载结果：lsblk  -f
   查看分区使用情况：df  -k
分区的卸载：
语法：umount  分区设备文件名 或 挂载点
2）自动挂载
   需要修改配置文件：/etc/fstab
   文件格式： 
  分区或磁盘的设备文件名 挂载点  文件系统  挂载选项  dump功能 是否检查文件系统以及检查次序
   
   例如：对/dev/sdb1分区进行自动挂载，挂载到/mnt/sdb_1目录
	第一步：创建挂载点  mkdir  /mnt/sdb_1
       第二步：修改/etc/fstab配置文件，添加/dev/sdb1分区挂载信息
       第三步：重启验证是否实现了自动挂载  shutdown -r 0

（5）磁盘配额
	概念：磁盘配额就是限制某个用户或者用户组对磁盘或者分区的使用量
       配额类型：
			block限制（块限制）：使用的空间大小限制
			inode限制（节点限制）：可以创建的文件个数的限制
       配额值：
			软限制：警告值，用户或者用户组使用的空间或者创建的文件大于软限制时，会					 进行警告。
			硬限制：最大值，用户或者用户组最多可以使用多大的空间或者最多可以创建多					 少个文件。
       配额的设置：
1）修改/etc/fstab配置文件，为对应的分区加上配额选项（usrquota,grpquota）
2）重新挂载分区
	mount  -o  remount  /mnt/sdb_1
3）创建配额数据文件
	quotacheck  -cug  /mnt/sdb_1
   查看配额文件是否创建成功：ls  /mnt/sdb_1
4）设置用户或组的配额
	第一方法：通过命令，编辑文件设置配额
			edquota  -u  用户名
			edquota  -g  组名
   第二种方法：通过命名直接设置
			setquota 用户名  块的软限制  块的硬限制  节点的软限制 节点的硬限制挂载点
	第三种方法：模仿配额
			edquota  -p  已经设置好配额的用户  待学习配额的用户

5）启动配额
	quotaon  挂载点
6）查看配额使用情况
	repquota  -a
	验证：
给哪个用户设置的配额，就用哪个用户去验证。

验证时，如果提示挂载目录没有操作权限，修改挂载目录的权限。chmod o+rwx 挂载目录。

7）关闭配额
	quotaoff   挂载点  
 
	重新设置配额后，一定要重启配额：
		先关闭配额，在启动配额

   关闭配额之后，用户使用空间或者创建文件，就不会再受软硬限制值的要求。

2.文件相关观念及操作
（1）Linux目录结构
	/dev  	设备目录
	/etc		配置目录
	/home	普通用户的主目录是放在/home目录下的
	/mnt或者/media  默认的挂载目录
（2）Linux文件命名及文件类型
	文件名的约束：
		1）不能使用特殊字符（可以用_ . + -）
		2）文件名区分大小写
		3）文件名最大长度为256个字符
		4）以.开头的文件为隐藏文件

	文件名的扩展名：
		其作用不是特别明显，但是在创建文件是最好是加上扩展名，便于自己来辨别文件。

	文件类型：
		目录文件		d
		文本文件		-
		软链接文件	l
		设备文件		b(块设备)  c(字符设备)
（3）文件路径  
	分类：
		绝对路径：参考根目录，只要目标目录没有改变，绝对路径就不变
		相对路径：参考的是当前工作目录，只要当前工作目录发生改变，相对路径就发生改变

（4）修改文件权限
1）能够操作文件的用户的分类
	3类：
①　文件拥有者		u
②　同组其他用户		g
③　其他用户		o
2）权限的类型
	3种权限：
①　读	r
②　写	w
③　执行	x
3）修改文件权限的方法
	语法：chmod   权限   文件名	
	此命令只能是文件拥有者或者管理员才能执行。
	3种方法：
①　通过“+”、“-”添加或者去掉某种权限
		例如：给file1文件的拥有者加上执行权限，给同组其他用户去掉写的权限，给其他			  用户去掉读的权限
			 chmod  u+x,g-w,o-r  file1
②　通过“=”赋予某种权限
		例如：给file1文件的拥有者赋予读写执行的权限，给同组其他用户赋予读写的权限，		     给其他用户赋予读的权限。
			chmod  u=rwx,g=rw,o=r  file1
③　通过3位8进制分别赋予不同用户不同的权限
		3位8进制:
			第1位8进制：文件拥有者的权限
			第2位8进制：同组其他用户的权限
			第3位8进制：其他用户的权限
		例如：给file1文件的拥有者赋予读写执行的权限，给同组其他用户赋予读写的权限，		     给其他用户赋予读的权限。
			  file1权限：rwx rw- r- -
			 第一种方法：
				r   4   r- -  100  4
				w  2	 -w-  010  2
				x	1	- -x  001   1		
				4+2+1  4+2  4
			第二种方法：
				rwx rw- r- -
				111 110 100
				764
		  	chmod  764  file1
（5）修改文件的拥有者
	语法：chown  用户名  文件名
	注意：该命令只有管理员才能运行
	3种表达方式：
①　只修改文件拥有者
		例如：将file1文件的文件拥有者修改为root用户
		chown  root  file1
②　只修改文件的属组
		chown   文件拥有者:属组	文件名	
		例如：将file1文件的属组改为group1用户组
		chown  :group1  file1
③　同时修改文件拥有者和属组
		例如：将file1文件的拥有者修改为Admin用户，将属组改为admin用户组
		chown  Admin:admin  file1
（6）修改文件属组
	语法：chgrp  组名  文件名
	注意：此命令只有管理员才能运行

	例如：将file1文件的属组改为group1用户组
	chgrp  group1  file1


文件的默认权限
1）.文件的默认权限是有umask值和文件及目录的权限基数决定
2）.文件的权限基数：666   目录的权限基数：777
3）.默认掩码值：管理员默认的umask值为002
4）.修改掩码值：umask 掩码值
5）.文件默认权限与umask值及文件、目录权限基数的关系
	umask值：002
	文件权限基数：666   目录权限基数：777
	文件默认权限：
	目录默认权限

	file1文件：rw-rw-r--：664
	dic1目录：rwxrwe--r-x:775


	文件默认权限=权限基数-umask值向下取偶的值
	目录默认权限=权限基数-umask值




bin， sbin（管理员） ；命令文件

搜索文件：
	which：可执行文件
	whereis：二进制文件，源文件，帮助文件
	locate：任何文件
	find：递归搜索

whereis:
	选项：
 		-b         只搜索二进制文件
		 -B <目录>  定义二进制文件查找路径
 		-m         只搜索 man 手册
 		-M <目录>  定义 man 手册查找路径
 		-s         只搜索源代码
 		-S <目录>  定义源代码查找路径
 		-f         终止 <目录> 参数列表
 		-u         搜索不常见记录
 		-l         输出有效查找路径

find ：
	-name 根据文件名
	-user 拥有者
	-group 属组
	-perm 权限
	-size 大小
	-type 类型
	-mtime 修改时间 -n/ +n
	-atime访问时间 -n/ +n
	-ctime 创建时间

搜索当前目录下，文件类型为文本文件，权限为rw-r--r--，拥有者为Admin，属组为group1，文件大小为10块，2天内创建，文件以file开头的文件:

	find -type f -perm 644 -user mingyyueye -group group1 -size +10 -ctime -2 -name "file*"

对找到的文件进一步操作
 find 【路径】 【参数】 【表达式】 -exec 指令 {} \;
   	{}表示find找到的文件 
  	\转意
  	；结束


搜索当前目录下，文件类型为文本文件，权限为rw-r--r--，拥有者为Admin，属组为group1，文件大小为10块，2天内创建，文件以file开头的文件，显示属性
   find -type f -perm 644 -user mingyyueye -group group1 -size +10 -ctime -2 -name "file*" -exec ls -l {} \;


etc/passwd:用户基本信息文件




常见的文件操作命令：
	head/tail more/less 文件查看

	wc 统计文件的行、词、字数



	grep 显示文件中匹配关键字的行
		语法：grep [选项] <关键字> <文件...（文件之间空格隔开）>
		常用选项：	-c 计算匹配关键字的行数
				-i 忽略字符大小写的差别
				-n 显示匹配的行及行号
				-h 查询多个文件时不显示文件名
				-l 查询文件时只显示匹配字符所在的文件名

	正则表达式：	^ 指定行的开始 如：'^test'匹配所有以"test"开头的行
			$ 指定行的结束 如：'test$'匹配所有以"test"结尾的行
			\< 指定单词的开始 如：
					'\<grep'匹配包含grep开头的单词的行
			\> 指定单词的结束 如
					'\>grep'匹配包含grep结束的单词的行
			. 匹配一个非换行符的行
			* 前面的字符重复任意次，如 'o*test'匹配所有一个或多个字符“o”后紧跟“test”字符串的行
			.*一起用表示任意字符
			[]匹配一个指定范围内的某个字符
			x\{m,\} 重复字符x，至少m次，如：'o\{5,\}' 匹配至少有5个o的行
			x\{m\} 重复字符x，m次，如：'o\{5\}' 匹配包含有5个o的行
			x\{m,n\} 重复字符x，至少m次，不多于n次，如：'o\{5,10\}' 匹配5-10个o的行
			
		
				
		例：显示以test开头的行：grep -n "test" file1
		    显示以test结束的行:grep -n 'test$' file1
		
		例：在/etc/passwd文件中查找root用户信息
			grep -n "^root" /etc/passwd
		    在/etc/passwd,/etc/shadow 中查找root用户的基本信息
			grep -n "^root" /etc/passwd /etc/shadow
		    搜索file1文件中包含了字母的行
			grep -n "[A-Za-z]\" file1
		    搜索file1中不包含数字的行
			grep -n "^[^0-9]\{0,\}$" file1
		    搜索只包含了数字的行
			grep -n "^[0-9]\{0,\}$" file1

		搜索只包含3个字母的行
			grep -n "^[A-Za-z]\{3\}$" file1



	sort 按序重排文本并显示
		语法：sort[选项] <文件>
		选项：	-f 忽略大小写的差异
			-b 忽略最前面的空格符号部分
			=M 以月份的名字排序
			-n 使用纯数字进行排序
			-r 反向排序
			-u 就是uniq，相同的数据中，仅出现一行
			-t 分隔符，默认是用【tab】键来分隔
			-k 以那个区间（field）来进行排序
			
		例：sort.txt文件内容如下：
		aaa:10:1.1
		ccc:30:3.3
		ddd:40:4.4 
		bbb:20:2.2 
		eee:50:5.5 
		eee:50:5.5
	
		例：：：：：：：：：：：：：：	
[mingyyueye@localhost ~]$ cat sort.txt
aaa:10:1.1
ccc:30:3.3
ddd:40:4.4
bbb:20:2.2
eee:50:5.5
eee:50:5.5
[mingyyueye@localhost ~]$ sort -t ":" -k 1 sort.txt
aaa:10:1.1
bbb:20:2.2
ccc:30:3.3
ddd:40:4.4
eee:50:5.5
eee:50:5.5
[mingyyueye@localhost ~]$ sort -t ":" -k 2 -n sort.txt
aaa:10:1.1
bbb:20:2.2
ccc:30:3.3
ddd:40:4.4
eee:50:5.5
eee:50:5.5
[mingyyueye@localhost ~]$ sort -t ":" -k 2 -n -r sort.txt
eee:50:5.5
eee:50:5.5
ddd:40:4.4
ccc:30:3.3
bbb:20:2.2
aaa:10:1.1



	
	unip 合并文件中相邻的重复的行
		语法：uniq [选项] [文件]
		选项：	-c 在每行旁边显示该行重复出现的次数
			-d 仅显示重复出现的行
			-u 仅显示出现一次的行
			-n 前n个字段与每个字段之前的空白一起忽略
			-n 前n个字符被忽略，之前的字符被跳过（字符从0开始编号）
			-fn 忽略前n个字段，与-n相同	
			-sn 忽略前n个字符，与+n相同
			
			例：	1 aaa 10 1.1
				2 ccc 30 3.3
				3 ddd 40 4.4
				4 bbb 20 2.2
				5 eee 50 5.5
				6 eee 50 5.5

			忽略文件前2个字符进行合并
[mingyyueye@localhost ~]$ uniq -s 2 -c sort.txt
      1 1 aaa 10 1.1
      1 2 ccc 30 3.3
      1 3 ddd 40 4.4
      1 4 bbb 20 2.2
      2 5 eee 50 5.5
[mingyyueye@localhost ~]$ uniq -s 2 -c -d sort.txt
      2 5 eee 50 5.5
[mingyyueye@localhost ~]$ uniq -s 2 -c -u sort.txt
      1 1 aaa 10 1.1
      1 2 ccc 30 3.3
      1 3 ddd 40 4.4
      1 4 bbb 20 2.2
[mingyyueye@localhost ~]$ uniq -c sort.txt
      1 1 aaa 10 1.1
      1 2 ccc 30 3.3
      1 3 ddd 40 4.4
      1 4 bbb 20 2.2
      1 5 eee 50 5.5
      1 6 eee 50 5.5


		                    		
		

	tr 转换字符，对文件进行替换和删除
	语法：tr [选项] 字符串1 【字符串2】 —>不跟文件名
		字符串1为需要转化的字符串，字符串2为待转化的字符串
		
		
		常用选项：	-c 用字符串中字符集的补集替换此字符串，要求字符集为ASCLL
				-d 删除字符串1中所有输入字符
				-s 删除所有重复出现的字符序列，只保留第一
				-c 取字符串的补集

		例：将file中所有的字符都删除
			tr -d "[0-9]"<sort.txt   或 cat file|tr -d "[0-9]"

		    删除0-9的补集;tr -d -c "[0-9]"<sort.txt
		    将文件file中出现的“abc”替换为“xyz”： cat file|tr "abc" "xyz" <file

	

		

	cut 显示文件中的某一列
	paste 将文本按列拼接













